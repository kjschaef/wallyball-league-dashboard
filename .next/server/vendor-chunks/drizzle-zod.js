"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/drizzle-zod";
exports.ids = ["vendor-chunks/drizzle-zod"];
exports.modules = {

/***/ "(rsc)/./node_modules/drizzle-zod/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/drizzle-zod/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInsertSchema: () => (/* binding */ createInsertSchema),\n/* harmony export */   createSchemaFactory: () => (/* binding */ createSchemaFactory),\n/* harmony export */   createSelectSchema: () => (/* binding */ createSelectSchema),\n/* harmony export */   createUpdateSchema: () => (/* binding */ createUpdateSchema)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/table.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/utils.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/entity.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/column.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/sql.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n\n\nconst CONSTANTS = {\n  INT8_MIN: -128,\n  INT8_MAX: 127,\n  INT8_UNSIGNED_MAX: 255,\n  INT16_MIN: -32768,\n  INT16_MAX: 32767,\n  INT16_UNSIGNED_MAX: 65535,\n  INT24_MIN: -8388608,\n  INT24_MAX: 8388607,\n  INT24_UNSIGNED_MAX: 16777215,\n  INT32_MIN: -2147483648,\n  INT32_MAX: 2147483647,\n  INT32_UNSIGNED_MAX: 4294967295,\n  INT48_MIN: -140737488355328,\n  INT48_MAX: 140737488355327,\n  INT48_UNSIGNED_MAX: 281474976710655,\n  INT64_MIN: -9223372036854775808n,\n  INT64_MAX: 9223372036854775807n,\n  INT64_UNSIGNED_MAX: 18446744073709551615n\n};\nfunction isColumnType(column, columnTypes) {\n  return columnTypes.includes(column.columnType);\n}\nfunction isWithEnum(column) {\n  return 'enumValues' in column && Array.isArray(column.enumValues) && column.enumValues.length > 0;\n}\nconst isPgEnum = isWithEnum;\nconst literalSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.union([zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.number(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean(), zod__WEBPACK_IMPORTED_MODULE_0__.z.null()]);\nconst jsonSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.lazy(() => zod__WEBPACK_IMPORTED_MODULE_0__.z.union([literalSchema, zod__WEBPACK_IMPORTED_MODULE_0__.z.array(jsonSchema), zod__WEBPACK_IMPORTED_MODULE_0__.z.record(jsonSchema)]));\nconst bufferSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.custom(v => v instanceof Buffer); // eslint-disable-line no-instanceof/no-instanceof\n/** @internal */\nfunction columnToSchema(column, z) {\n  let schema;\n  if (isWithEnum(column)) {\n    schema = column.enumValues.length ? z.enum(column.enumValues) : z.string();\n  }\n  if (!schema) {\n    // Handle specific types\n    if (isColumnType(column, ['PgGeometry', 'PgPointTuple'])) {\n      schema = z.tuple([z.number(), z.number()]);\n    } else if (isColumnType(column, ['PgGeometryObject', 'PgPointObject'])) {\n      schema = z.object({\n        x: z.number(),\n        y: z.number()\n      });\n    } else if (isColumnType(column, ['PgHalfVector', 'PgVector'])) {\n      schema = z.array(z.number());\n      schema = column.dimensions ? schema.length(column.dimensions) : schema;\n    } else if (isColumnType(column, ['PgLine'])) {\n      schema = z.tuple([z.number(), z.number(), z.number()]);\n    } else if (isColumnType(column, ['PgLineABC'])) {\n      schema = z.object({\n        a: z.number(),\n        b: z.number(),\n        c: z.number()\n      });\n    } // Handle other types\n    else if (isColumnType(column, ['PgArray'])) {\n      schema = z.array(columnToSchema(column.baseColumn, z));\n      schema = column.size ? schema.length(column.size) : schema;\n    } else if (column.dataType === 'array') {\n      schema = z.array(z.any());\n    } else if (column.dataType === 'number') {\n      schema = numberColumnToSchema(column, z);\n    } else if (column.dataType === 'bigint') {\n      schema = bigintColumnToSchema(column, z);\n    } else if (column.dataType === 'boolean') {\n      schema = z.boolean();\n    } else if (column.dataType === 'date') {\n      schema = z.date();\n    } else if (column.dataType === 'string') {\n      schema = stringColumnToSchema(column, z);\n    } else if (column.dataType === 'json') {\n      schema = jsonSchema;\n    } else if (column.dataType === 'custom') {\n      schema = z.any();\n    } else if (column.dataType === 'buffer') {\n      schema = bufferSchema;\n    }\n  }\n  if (!schema) {\n    schema = z.any();\n  }\n  return schema;\n}\nfunction numberColumnToSchema(column, z) {\n  let unsigned = column.getSQLType().includes('unsigned');\n  let min;\n  let max;\n  let integer = false;\n  if (isColumnType(column, ['MySqlTinyInt'])) {\n    min = unsigned ? 0 : CONSTANTS.INT8_MIN;\n    max = unsigned ? CONSTANTS.INT8_UNSIGNED_MAX : CONSTANTS.INT8_MAX;\n    integer = true;\n  } else if (isColumnType(column, ['PgSmallInt', 'PgSmallSerial', 'MySqlSmallInt'])) {\n    min = unsigned ? 0 : CONSTANTS.INT16_MIN;\n    max = unsigned ? CONSTANTS.INT16_UNSIGNED_MAX : CONSTANTS.INT16_MAX;\n    integer = true;\n  } else if (isColumnType(column, ['PgReal', 'MySqlFloat', 'MySqlMediumInt'])) {\n    min = unsigned ? 0 : CONSTANTS.INT24_MIN;\n    max = unsigned ? CONSTANTS.INT24_UNSIGNED_MAX : CONSTANTS.INT24_MAX;\n    integer = isColumnType(column, ['MySqlMediumInt']);\n  } else if (isColumnType(column, ['PgInteger', 'PgSerial', 'MySqlInt'])) {\n    min = unsigned ? 0 : CONSTANTS.INT32_MIN;\n    max = unsigned ? CONSTANTS.INT32_UNSIGNED_MAX : CONSTANTS.INT32_MAX;\n    integer = true;\n  } else if (isColumnType(column, ['PgDoublePrecision', 'MySqlReal', 'MySqlDouble', 'SQLiteReal'])) {\n    min = unsigned ? 0 : CONSTANTS.INT48_MIN;\n    max = unsigned ? CONSTANTS.INT48_UNSIGNED_MAX : CONSTANTS.INT48_MAX;\n  } else if (isColumnType(column, ['PgBigInt53', 'PgBigSerial53', 'MySqlBigInt53', 'MySqlSerial', 'SQLiteInteger'])) {\n    unsigned = unsigned || isColumnType(column, ['MySqlSerial']);\n    min = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n    max = Number.MAX_SAFE_INTEGER;\n    integer = true;\n  } else if (isColumnType(column, ['MySqlYear'])) {\n    min = 1901;\n    max = 2155;\n    integer = true;\n  } else {\n    min = Number.MIN_SAFE_INTEGER;\n    max = Number.MAX_SAFE_INTEGER;\n  }\n  const schema = z.number().min(min).max(max);\n  return integer ? schema.int() : schema;\n}\nfunction bigintColumnToSchema(column, z) {\n  const unsigned = column.getSQLType().includes('unsigned');\n  const min = unsigned ? 0n : CONSTANTS.INT64_MIN;\n  const max = unsigned ? CONSTANTS.INT64_UNSIGNED_MAX : CONSTANTS.INT64_MAX;\n  return z.bigint().min(min).max(max);\n}\nfunction stringColumnToSchema(column, z) {\n  if (isColumnType(column, ['PgUUID'])) {\n    return z.string().uuid();\n  }\n  let max;\n  let regex;\n  let fixed = false;\n  if (isColumnType(column, ['PgVarchar', 'SQLiteText'])) {\n    max = column.length;\n  } else if (isColumnType(column, ['MySqlVarChar'])) {\n    max = column.length ?? CONSTANTS.INT16_UNSIGNED_MAX;\n  } else if (isColumnType(column, ['MySqlText'])) {\n    if (column.textType === 'longtext') {\n      max = CONSTANTS.INT32_UNSIGNED_MAX;\n    } else if (column.textType === 'mediumtext') {\n      max = CONSTANTS.INT24_UNSIGNED_MAX;\n    } else if (column.textType === 'text') {\n      max = CONSTANTS.INT16_UNSIGNED_MAX;\n    } else {\n      max = CONSTANTS.INT8_UNSIGNED_MAX;\n    }\n  }\n  if (isColumnType(column, ['PgChar', 'MySqlChar'])) {\n    max = column.length;\n    fixed = true;\n  }\n  if (isColumnType(column, ['PgBinaryVector'])) {\n    regex = /^[01]+$/;\n    max = column.dimensions;\n  }\n  let schema = z.string();\n  schema = regex ? schema.regex(regex) : schema;\n  return max && fixed ? schema.length(max) : max ? schema.max(max) : schema;\n}\nfunction getColumns(tableLike) {\n  return (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.isTable)(tableLike) ? (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.getTableColumns)(tableLike) : (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.getViewSelectedFields)(tableLike);\n}\nfunction handleColumns(columns, refinements, conditions, factory) {\n  const columnSchemas = {};\n  for (const [key, selected] of Object.entries(columns)) {\n    if (!(0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(selected, drizzle_orm__WEBPACK_IMPORTED_MODULE_4__.Column) && !(0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(selected, drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.SQL) && !(0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(selected, drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.SQL.Aliased) && typeof selected === 'object') {\n      const columns = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.isTable)(selected) || (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.isView)(selected) ? getColumns(selected) : selected;\n      columnSchemas[key] = handleColumns(columns, refinements[key] ?? {}, conditions, factory);\n      continue;\n    }\n    const refinement = refinements[key];\n    if (refinement !== undefined && typeof refinement !== 'function') {\n      columnSchemas[key] = refinement;\n      continue;\n    }\n    const column = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(selected, drizzle_orm__WEBPACK_IMPORTED_MODULE_4__.Column) ? selected : undefined;\n    const schema = column ? columnToSchema(column, factory?.zodInstance ?? zod__WEBPACK_IMPORTED_MODULE_0__.z) : zod__WEBPACK_IMPORTED_MODULE_0__.z.any();\n    const refined = typeof refinement === 'function' ? refinement(schema) : schema;\n    if (conditions.never(column)) {\n      continue;\n    } else {\n      columnSchemas[key] = refined;\n    }\n    if (column) {\n      if (conditions.nullable(column)) {\n        columnSchemas[key] = columnSchemas[key].nullable();\n      }\n      if (conditions.optional(column)) {\n        columnSchemas[key] = columnSchemas[key].optional();\n      }\n    }\n  }\n  return zod__WEBPACK_IMPORTED_MODULE_0__.z.object(columnSchemas);\n}\nfunction handleEnum(enum_, factory) {\n  const zod = factory?.zodInstance ?? zod__WEBPACK_IMPORTED_MODULE_0__.z;\n  return zod.enum(enum_.enumValues);\n}\nconst selectConditions = {\n  never: () => false,\n  optional: () => false,\n  nullable: column => !column.notNull\n};\nconst insertConditions = {\n  never: column => column?.generated?.type === 'always' || column?.generatedIdentity?.type === 'always',\n  optional: column => !column.notNull || column.notNull && column.hasDefault,\n  nullable: column => !column.notNull\n};\nconst updateConditions = {\n  never: column => column?.generated?.type === 'always' || column?.generatedIdentity?.type === 'always',\n  optional: () => true,\n  nullable: column => !column.notNull\n};\nconst createSelectSchema = (entity, refine) => {\n  if (isPgEnum(entity)) {\n    return handleEnum(entity);\n  }\n  const columns = getColumns(entity);\n  return handleColumns(columns, refine ?? {}, selectConditions);\n};\nconst createInsertSchema = (entity, refine) => {\n  const columns = getColumns(entity);\n  return handleColumns(columns, refine ?? {}, insertConditions);\n};\nconst createUpdateSchema = (entity, refine) => {\n  const columns = getColumns(entity);\n  return handleColumns(columns, refine ?? {}, updateConditions);\n};\nfunction createSchemaFactory(options) {\n  const createSelectSchema = (entity, refine) => {\n    if (isPgEnum(entity)) {\n      return handleEnum(entity, options);\n    }\n    const columns = getColumns(entity);\n    return handleColumns(columns, refine ?? {}, selectConditions, options);\n  };\n  const createInsertSchema = (entity, refine) => {\n    const columns = getColumns(entity);\n    return handleColumns(columns, refine ?? {}, insertConditions, options);\n  };\n  const createUpdateSchema = (entity, refine) => {\n    const columns = getColumns(entity);\n    return handleColumns(columns, refine ?? {}, updateConditions, options);\n  };\n  return {\n    createSelectSchema,\n    createInsertSchema,\n    createUpdateSchema\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/drizzle-zod/index.mjs\n");

/***/ })

};
;